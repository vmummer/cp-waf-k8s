# ~~~~~~~~~~~~~~ Stage 1: The Builder ~~~~~~~~~~~~~~
# Use a specific, stable version instead of a beta release
FROM python:3.14.0b4-slim AS builder 
#FROM python:3.12-slim as builder

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    # Create a virtual environment
    VIRTUAL_ENV=/opt/venv

# Create and activate the virtual environment
RUN python3 -m venv $VIRTUAL_ENV
ENV PATH="$VIRTUAL_ENV/bin:$PATH"

# Install build-time system dependencies
# These will NOT be in the final image
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        git \
#       curl \
        gcc \
        build-essential \
        libxml2-dev \
        libxslt1-dev  \
	zlib1g-dev && \
    rm -rf /var/lib/apt/lists/*

# Install python packages into the virtual environment
# This benefits from caching. Only re-runs if requirements change.
COPY requirements.txt .
RUN pip install --upgrade  pip && \ 
    pip install --no-cache-dir -r requirements.txt

# Clone repositories using a shallow clone and remove the .git folder
# This is much smaller than a full clone
RUN git clone --depth 1 https://github.com/vmummer/web-scraper.git /home/web-scraper && \
    rm -rf /home/web-scraper/.git
RUN git clone --depth 1 https://github.com/vmummer/juice-shop-solver.git /home/juice-shop-solver && \
    rm -rf /home/juice-shop-solver/.git

# ~~~~~~~~~~~~~~ Stage 2: The Final Image ~~~~~~~~~~~~~~
FROM python:3.12-slim

LABEL maintainer="Vince Mammoliti <vincem@checkpoint.com>" \
      description="Updated to support Kubernetes Pod to run all traffic generators inside the Pod" \
      version="2025-07-14"

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    VIRTUAL_ENV=/opt/venv

# Copy the virtual environment from the builder stage
COPY --from=builder $VIRTUAL_ENV $VIRTUAL_ENV

# Set the PATH to use the packages from the virtual environment
ENV PATH="$VIRTUAL_ENV/bin:$PATH"

# Install ONLY the runtime system dependencies
# These are much smaller than the -dev versions
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        jq \
        libxml2 \
        libxslt1-dev \
        iputils-ping \
        # ca-certificates and curl might be needed if your app makes https requests at runtime
        ca-certificates \
        curl \
	sqlmap && \
    # Clean up apt cache
    rm -rf /var/lib/apt/lists/*

# Copy application code from the builder stage
COPY --from=builder /home/web-scraper /home/web-scraper
COPY --from=builder /home/juice-shop-solver /home/juice-shop-solver

RUN pip install --upgrade  pip && \
    pip install --no-cache-dir -r requirements.txt


# Copy local files
COPY cp /home/cp

WORKDIR /home/cp

# Command to run your application would go here
# CMD ["python", "my_app.py"]
